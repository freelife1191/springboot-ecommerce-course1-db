services: # 이 항목 밑에 실행하려는 컨테이너 들을 정의 ( 컴포즈에서 컨테이너 : 서비스 )
  mysql-db: # 서비스 명
    # amd64 아키텍처로 실행
    platform: linux/amd64
    # 기본 MySQL 이미지 사용
    image: mysql:5.7
    restart: always
    ports:
      - "3306:3306" # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)  <- 컨테이너 내부는 무조건 3306
    environment: # -e 옵션
      MYSQL_ROOT_PASSWORD: onion1!
      MYSQL_DATABASE: onion-db
      MYSQL_USER: onion-user
      MYSQL_PASSWORD: onion1!
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      TZ: Asia/Seoul
    volumes:
      - db_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql #init.sql 실행을 위한 설정. docker-compose.yml과 init.sql이 같은 루트 경로에 있어야 한다.(경로 수정 가능)
    command: # 명령어 실행
      - --lower_case_table_names=1
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+9:00
      - --max_connections=1000
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ELASTIC_PASSWORD=onion1!
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    command: >
      sh -c "
      bin/elasticsearch-plugin install analysis-nori;
      bin/elasticsearch
      "
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.1
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
volumes:
  db_data:
  es-data:
    driver: local